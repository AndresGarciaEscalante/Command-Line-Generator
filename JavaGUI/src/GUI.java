/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
//import java.io.BufferedReader;
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Scanner;
import java.util.logging.Formatter;
import javax.swing.*;
import javax.swing.filechooser.FileFilter;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author Andres Ricardo
 */
public class GUI extends javax.swing.JFrame {

    /**
     * Creates new form GUI
     */
    public GUI() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jSeparator1 = new javax.swing.JSeparator();
        OutputCommandLine = new javax.swing.JTextField();
        jSplitPane1 = new javax.swing.JSplitPane();
        jPanel1 = new javax.swing.JPanel();
        P1Title = new javax.swing.JLabel();
        P1Label1 = new javax.swing.JLabel();
        P1Label2 = new javax.swing.JLabel();
        P1Label3 = new javax.swing.JLabel();
        P1Label4 = new javax.swing.JLabel();
        P1Label5 = new javax.swing.JLabel();
        P1Label6 = new javax.swing.JLabel();
        P1Label7 = new javax.swing.JLabel();
        P1Label8 = new javax.swing.JLabel();
        P1Label9 = new javax.swing.JLabel();
        P1Label10 = new javax.swing.JLabel();
        P1Label11 = new javax.swing.JLabel();
        P1Label12 = new javax.swing.JLabel();
        P1Label13 = new javax.swing.JLabel();
        P1Label14 = new javax.swing.JLabel();
        P1Label15 = new javax.swing.JLabel();
        P1Label16 = new javax.swing.JLabel();
        P1Label17 = new javax.swing.JLabel();
        P1Label18 = new javax.swing.JLabel();
        P1Label19 = new javax.swing.JLabel();
        P1Label20 = new javax.swing.JLabel();
        P1Label21 = new javax.swing.JLabel();
        P1Label22 = new javax.swing.JLabel();
        P1Label23 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        P2Title = new javax.swing.JLabel();
        P2TF1 = new javax.swing.JTextField();
        P2CB2 = new javax.swing.JComboBox<>();
        P2TF3 = new javax.swing.JTextField();
        P2TFE4 = new javax.swing.JTextField();
        P2TF5 = new javax.swing.JTextField();
        P2CB6 = new javax.swing.JCheckBox();
        P2TF7 = new javax.swing.JTextField();
        P2TF8 = new javax.swing.JTextField();
        P2TFE9 = new javax.swing.JTextField();
        P2TF10 = new javax.swing.JTextField();
        P2CB11 = new javax.swing.JCheckBox();
        P2TFE12 = new javax.swing.JTextField();
        P2CB13 = new javax.swing.JCheckBox();
        P2CB14 = new javax.swing.JCheckBox();
        P2CB15 = new javax.swing.JCheckBox();
        P2CB16 = new javax.swing.JCheckBox();
        P2CB17 = new javax.swing.JCheckBox();
        P2TFE18 = new javax.swing.JTextField();
        P2CB19 = new javax.swing.JCheckBox();
        P2CB20 = new javax.swing.JCheckBox();
        P2CB21 = new javax.swing.JCheckBox();
        P2CB22 = new javax.swing.JCheckBox();
        P2CB23 = new javax.swing.JCheckBox();
        jMenuBar1 = new javax.swing.JMenuBar();
        File = new javax.swing.JMenu();
        Open = new javax.swing.JMenuItem();
        Save = new javax.swing.JMenuItem();
        SaveAs = new javax.swing.JMenuItem();
        ClearHistory = new javax.swing.JMenuItem();
        ClearOptions = new javax.swing.JMenu();
        ClearLaunches = new javax.swing.JMenuItem();
        ImageMenu = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("QTSolverCommandLine");
        setPreferredSize(new java.awt.Dimension(670, 770));
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        OutputCommandLine.setEditable(false);

        jSplitPane1.setDividerLocation(320);
        jSplitPane1.setOneTouchExpandable(true);

        jPanel1.setBackground(new java.awt.Color(255, 255, 220));
        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel1.setPreferredSize(new java.awt.Dimension(219, 580));

        P1Title.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        P1Title.setText("Parameter");
        P1Title.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        P1Title.setOpaque(true);

        P1Label1.setBackground(new java.awt.Color(255, 255, 222));
        P1Label1.setText("Root Filename");
        P1Label1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        P1Label1.setOpaque(true);
        P1Label1.setPreferredSize(new java.awt.Dimension(33, 19));

        P1Label2.setBackground(new java.awt.Color(255, 255, 191));
        P1Label2.setText("Launch Command");
        P1Label2.setOpaque(true);
        P1Label2.setPreferredSize(new java.awt.Dimension(33, 19));

        P1Label3.setBackground(new java.awt.Color(255, 255, 222));
        P1Label3.setText("UTLM Cluster Threshold");
        P1Label3.setOpaque(true);
        P1Label3.setPreferredSize(new java.awt.Dimension(33, 19));

        P1Label4.setBackground(new java.awt.Color(255, 255, 191));
        P1Label4.setText("Time Domain Simulation");
        P1Label4.setOpaque(true);
        P1Label4.setPreferredSize(new java.awt.Dimension(33, 19));

        P1Label5.setBackground(new java.awt.Color(255, 255, 222));
        P1Label5.setText("Time Step as Equivalent SCN Edge Length");
        P1Label5.setOpaque(true);
        P1Label5.setPreferredSize(new java.awt.Dimension(33, 19));

        P1Label6.setBackground(new java.awt.Color(255, 255, 191));
        P1Label6.setText("     Accept Recommended Time Step Value");
        P1Label6.setOpaque(true);
        P1Label6.setPreferredSize(new java.awt.Dimension(33, 19));

        P1Label7.setBackground(new java.awt.Color(255, 255, 222));
        P1Label7.setText("Total Simulation Time in Value");
        P1Label7.setOpaque(true);
        P1Label7.setPreferredSize(new java.awt.Dimension(33, 19));

        P1Label8.setBackground(new java.awt.Color(255, 255, 191));
        P1Label8.setText("     Proogress Reporting in Intervals");
        P1Label8.setOpaque(true);
        P1Label8.setPreferredSize(new java.awt.Dimension(38, 19));
        P1Label8.setVerifyInputWhenFocusTarget(false);

        P1Label9.setBackground(new java.awt.Color(255, 255, 222));
        P1Label9.setText("Parallel Options");
        P1Label9.setOpaque(true);
        P1Label9.setPreferredSize(new java.awt.Dimension(38, 19));

        P1Label10.setBackground(new java.awt.Color(255, 255, 191));
        P1Label10.setText("     Number of OPenMP Threads");
        P1Label10.setOpaque(true);
        P1Label10.setPreferredSize(new java.awt.Dimension(38, 19));

        P1Label11.setBackground(new java.awt.Color(255, 255, 222));
        P1Label11.setText("     Use Passive Master Node with MPI");
        P1Label11.setOpaque(true);
        P1Label11.setPreferredSize(new java.awt.Dimension(38, 19));

        P1Label12.setBackground(new java.awt.Color(255, 255, 191));
        P1Label12.setText("Reporting Outputs");
        P1Label12.setOpaque(true);
        P1Label12.setPreferredSize(new java.awt.Dimension(82, 19));

        P1Label13.setBackground(new java.awt.Color(255, 255, 222));
        P1Label13.setText("     Don't Timestamp LogFile");
        P1Label13.setOpaque(true);
        P1Label13.setPreferredSize(new java.awt.Dimension(113, 19));

        P1Label14.setBackground(new java.awt.Color(255, 255, 191));
        P1Label14.setText("     Save Cluster Report");
        P1Label14.setOpaque(true);
        P1Label14.setPreferredSize(new java.awt.Dimension(91, 19));

        P1Label15.setBackground(new java.awt.Color(255, 255, 222));
        P1Label15.setText("     Save EigenReport");
        P1Label15.setOpaque(true);
        P1Label15.setPreferredSize(new java.awt.Dimension(81, 19));

        P1Label16.setBackground(new java.awt.Color(255, 255, 191));
        P1Label16.setText("     Save Time Reponses Report");
        P1Label16.setOpaque(true);
        P1Label16.setPreferredSize(new java.awt.Dimension(130, 19));

        P1Label17.setBackground(new java.awt.Color(255, 255, 222));
        P1Label17.setText("     Save LinkLine Report");
        P1Label17.setOpaque(true);
        P1Label17.setPreferredSize(new java.awt.Dimension(95, 19));

        P1Label18.setBackground(new java.awt.Color(255, 255, 191));
        P1Label18.setText("Developer Options");
        P1Label18.setOpaque(true);
        P1Label18.setPreferredSize(new java.awt.Dimension(83, 19));

        P1Label19.setBackground(new java.awt.Color(255, 255, 222));
        P1Label19.setText("     Force All Faces into Rtree");
        P1Label19.setOpaque(true);
        P1Label19.setPreferredSize(new java.awt.Dimension(118, 19));

        P1Label20.setBackground(new java.awt.Color(255, 255, 191));
        P1Label20.setText("     Lattice Seeding");
        P1Label20.setOpaque(true);
        P1Label20.setPreferredSize(new java.awt.Dimension(70, 19));

        P1Label21.setBackground(new java.awt.Color(255, 255, 222));
        P1Label21.setText("     Lattice Scan");
        P1Label21.setOpaque(true);
        P1Label21.setPreferredSize(new java.awt.Dimension(55, 19));

        P1Label22.setBackground(new java.awt.Color(255, 255, 191));
        P1Label22.setText("     Implement Cubes as Clusters");
        P1Label22.setOpaque(true);
        P1Label22.setPreferredSize(new java.awt.Dimension(134, 19));

        P1Label23.setBackground(new java.awt.Color(255, 255, 222));
        P1Label23.setText("     Developer Mode");
        P1Label23.setOpaque(true);
        P1Label23.setPreferredSize(new java.awt.Dimension(74, 19));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(P1Title, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(P1Label2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(P1Label3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(P1Label4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(P1Label5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(P1Label1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(P1Label9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(P1Label12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(P1Label18, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(P1Label6, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(P1Label7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(P1Label8, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(P1Label10, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(P1Label11, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(P1Label13, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(P1Label14, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(P1Label15, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(P1Label16, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(P1Label17, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(P1Label19, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(P1Label20, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(P1Label21, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(P1Label22, javax.swing.GroupLayout.DEFAULT_SIZE, 297, Short.MAX_VALUE)
                    .addComponent(P1Label23, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(P1Title)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(P1Label1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(P1Label2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(P1Label3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(P1Label4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(P1Label5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(P1Label6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(P1Label7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(P1Label8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(P1Label9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(P1Label10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(P1Label11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(P1Label12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(P1Label13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(P1Label14, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(P1Label15, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(P1Label16, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(P1Label17, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(P1Label18, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(P1Label19, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(P1Label20, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(P1Label21, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(P1Label22, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(P1Label23, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10))
        );

        jSplitPane1.setLeftComponent(jPanel1);

        jPanel2.setBackground(new java.awt.Color(255, 255, 220));
        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        P2Title.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        P2Title.setText("Value");
        P2Title.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        P2Title.setOpaque(true);

        P2TF1.setBackground(new java.awt.Color(255, 255, 222));
        P2TF1.setBorder(null);
        P2TF1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        P2TF1.setSelectionColor(new java.awt.Color(51, 51, 255));
        P2TF1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                P2TF1ActionPerformed(evt);
            }
        });

        P2CB2.setBackground(new java.awt.Color(255, 255, 222));
        P2CB2.setEditable(true);
        P2CB2.setAlignmentX(0.0F);
        P2CB2.setBorder(null);
        P2CB2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        P2CB2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                P2CB2ActionPerformed(evt);
            }
        });

        P2TF3.setBackground(new java.awt.Color(255, 255, 222));
        P2TF3.setAlignmentX(0.0F);
        P2TF3.setBorder(null);
        P2TF3.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        P2TF3.setPreferredSize(new java.awt.Dimension(51, 19));
        P2TF3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                P2TF3ActionPerformed(evt);
            }
        });

        P2TFE4.setEditable(false);
        P2TFE4.setBackground(new java.awt.Color(255, 255, 191));
        P2TFE4.setBorder(null);
        P2TFE4.setPreferredSize(new java.awt.Dimension(51, 19));

        P2TF5.setBackground(new java.awt.Color(255, 255, 222));
        P2TF5.setBorder(null);
        P2TF5.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        P2TF5.setPreferredSize(new java.awt.Dimension(51, 19));
        P2TF5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                P2TF5ActionPerformed(evt);
            }
        });

        P2CB6.setBackground(new java.awt.Color(255, 204, 102));
        P2CB6.setForeground(new java.awt.Color(255, 102, 51));
        P2CB6.setBorder(new javax.swing.border.MatteBorder(null));
        P2CB6.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        P2CB6.setFocusPainted(false);
        P2CB6.setFocusable(false);
        P2CB6.setOpaque(false);
        P2CB6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                P2CB6ActionPerformed(evt);
            }
        });

        P2TF7.setBackground(new java.awt.Color(255, 255, 222));
        P2TF7.setBorder(null);
        P2TF7.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        P2TF7.setPreferredSize(new java.awt.Dimension(51, 19));
        P2TF7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                P2TF7ActionPerformed(evt);
            }
        });

        P2TF8.setBackground(new java.awt.Color(255, 255, 191));
        P2TF8.setBorder(null);
        P2TF8.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        P2TF8.setPreferredSize(new java.awt.Dimension(51, 19));
        P2TF8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                P2TF8ActionPerformed(evt);
            }
        });

        P2TFE9.setEditable(false);
        P2TFE9.setBackground(new java.awt.Color(255, 255, 222));
        P2TFE9.setBorder(null);
        P2TFE9.setPreferredSize(new java.awt.Dimension(57, 19));
        P2TFE9.setSelectionColor(new java.awt.Color(255, 255, 255));

        P2TF10.setBackground(new java.awt.Color(255, 255, 191));
        P2TF10.setBorder(null);
        P2TF10.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        P2TF10.setPreferredSize(new java.awt.Dimension(51, 19));
        P2TF10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                P2TF10ActionPerformed(evt);
            }
        });

        P2CB11.setBorder(null);
        P2CB11.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        P2CB11.setPreferredSize(new java.awt.Dimension(69, 19));
        P2CB11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                P2CB11ActionPerformed(evt);
            }
        });

        P2TFE12.setEditable(false);
        P2TFE12.setBackground(new java.awt.Color(255, 255, 191));
        P2TFE12.setBorder(null);
        P2TFE12.setPreferredSize(new java.awt.Dimension(57, 19));

        P2CB13.setBorder(null);
        P2CB13.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        P2CB13.setPreferredSize(new java.awt.Dimension(69, 19));
        P2CB13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                P2CB13ActionPerformed(evt);
            }
        });

        P2CB14.setBorder(null);
        P2CB14.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        P2CB14.setPreferredSize(new java.awt.Dimension(69, 19));
        P2CB14.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                P2CB14ActionPerformed(evt);
            }
        });

        P2CB15.setBorder(null);
        P2CB15.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        P2CB15.setPreferredSize(new java.awt.Dimension(69, 19));
        P2CB15.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                P2CB15ActionPerformed(evt);
            }
        });

        P2CB16.setBorder(null);
        P2CB16.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        P2CB16.setPreferredSize(new java.awt.Dimension(69, 19));
        P2CB16.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                P2CB16ActionPerformed(evt);
            }
        });

        P2CB17.setBorder(null);
        P2CB17.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        P2CB17.setPreferredSize(new java.awt.Dimension(69, 19));
        P2CB17.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                P2CB17ActionPerformed(evt);
            }
        });

        P2TFE18.setEditable(false);
        P2TFE18.setBackground(new java.awt.Color(255, 255, 191));
        P2TFE18.setBorder(null);
        P2TFE18.setPreferredSize(new java.awt.Dimension(57, 19));

        P2CB19.setBorder(null);
        P2CB19.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        P2CB19.setPreferredSize(new java.awt.Dimension(69, 19));
        P2CB19.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                P2CB19ActionPerformed(evt);
            }
        });

        P2CB20.setBorder(null);
        P2CB20.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        P2CB20.setEnabled(false);
        P2CB20.setPreferredSize(new java.awt.Dimension(69, 19));
        P2CB20.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                P2CB20ActionPerformed(evt);
            }
        });

        P2CB21.setBorder(null);
        P2CB21.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        P2CB21.setEnabled(false);
        P2CB21.setPreferredSize(new java.awt.Dimension(75, 19));
        P2CB21.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                P2CB21ActionPerformed(evt);
            }
        });

        P2CB22.setBorder(null);
        P2CB22.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        P2CB22.setPreferredSize(new java.awt.Dimension(75, 19));
        P2CB22.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                P2CB22ActionPerformed(evt);
            }
        });

        P2CB23.setBorder(null);
        P2CB23.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        P2CB23.setPreferredSize(new java.awt.Dimension(75, 19));
        P2CB23.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                P2CB23ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(P2Title, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(P2TF1)
                    .addComponent(P2TFE4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(P2TF5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(P2TF3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(P2CB2, javax.swing.GroupLayout.Alignment.TRAILING, 0, 302, Short.MAX_VALUE)
                    .addComponent(P2TF7, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(P2TF8, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(P2TF10, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(P2TFE12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(P2TFE18, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(P2TFE9, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(P2CB23, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                                .addComponent(P2CB22, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                                .addComponent(P2CB21, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                                .addComponent(P2CB20, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 15, Short.MAX_VALUE)
                                .addComponent(P2CB17, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                                .addComponent(P2CB16, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                                .addComponent(P2CB15, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                                .addComponent(P2CB14, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                                .addComponent(P2CB11, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                                .addComponent(P2CB13, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                                .addComponent(P2CB19, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                            .addComponent(P2CB6, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(P2Title)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(P2TF1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(P2CB2, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(P2TF3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(P2TFE4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(P2TF5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(P2CB6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(P2TF7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(P2TF8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(P2TFE9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(P2TF10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(P2CB11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(P2TFE12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(P2CB13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(P2CB14, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(P2CB15, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(P2CB16, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(P2CB17, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(P2TFE18, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(P2CB19, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(P2CB20, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(P2CB21, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(6, 6, 6)
                .addComponent(P2CB22, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(6, 6, 6)
                .addComponent(P2CB23, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jSplitPane1.setRightComponent(jPanel2);

        jMenuBar1.setBackground(new java.awt.Color(0, 0, 0));

        File.setBackground(new java.awt.Color(226, 240, 217));
        File.setIcon(new javax.swing.ImageIcon("C:\\Users\\Andres Ricardo\\Desktop\\Coursework3\\Images\\iconfinder_system-file-manager_118825.png")); // NOI18N
        File.setText("File");
        File.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        File.setOpaque(true);

        Open.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_O, java.awt.event.InputEvent.CTRL_MASK));
        Open.setIcon(new javax.swing.ImageIcon("C:\\Users\\Andres Ricardo\\Desktop\\Coursework3\\Images\\iconfinder_Open_1493293.png")); // NOI18N
        Open.setText("Open (Ctrl-O)");
        Open.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        Open.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OpenActionPerformed(evt);
            }
        });
        File.add(Open);

        Save.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.CTRL_MASK));
        Save.setIcon(new javax.swing.ImageIcon("C:\\Users\\Andres Ricardo\\Desktop\\Coursework3\\Images\\iconfinder_floppy_disk_save_103863.png")); // NOI18N
        Save.setText("Save (Ctrl-S)");
        Save.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        Save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SaveActionPerformed(evt);
            }
        });
        File.add(Save);

        SaveAs.setIcon(new javax.swing.ImageIcon("C:\\Users\\Andres Ricardo\\Desktop\\Coursework3\\Images\\iconfinder_Download_1031520.png")); // NOI18N
        SaveAs.setText("SaveAs");
        SaveAs.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        SaveAs.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SaveAsActionPerformed(evt);
            }
        });
        File.add(SaveAs);

        ClearHistory.setIcon(new javax.swing.ImageIcon("C:\\Users\\Andres Ricardo\\Desktop\\Coursework3\\Images\\iconfinder_circle-backup-time-history-recent-time-machine-outline-stroke_763474.png")); // NOI18N
        ClearHistory.setText("Clear History");
        ClearHistory.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        File.add(ClearHistory);

        jMenuBar1.add(File);

        ClearOptions.setBackground(new java.awt.Color(226, 240, 217));
        ClearOptions.setIcon(new javax.swing.ImageIcon("C:\\Users\\Andres Ricardo\\Desktop\\Coursework3\\Images\\iconfinder_edit-clear_118917.png")); // NOI18N
        ClearOptions.setText("Clear Options");
        ClearOptions.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        ClearOptions.setFocusPainted(true);
        ClearOptions.setOpaque(true);

        ClearLaunches.setIcon(new javax.swing.ImageIcon("C:\\Users\\Andres Ricardo\\Desktop\\Coursework3\\Images\\iconfinder_draw-08_725558.png")); // NOI18N
        ClearLaunches.setText("Clear Launches");
        ClearLaunches.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        ClearLaunches.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ClearLaunchesActionPerformed(evt);
            }
        });
        ClearOptions.add(ClearLaunches);

        jMenuBar1.add(ClearOptions);

        ImageMenu.setBackground(new java.awt.Color(226, 240, 217));
        ImageMenu.setBorder(null);
        ImageMenu.setIcon(new javax.swing.ImageIcon("C:\\Users\\Andres Ricardo\\Desktop\\Coursework3\\Images\\UTLM_solver_banner.jpg")); // NOI18N
        ImageMenu.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        ImageMenu.setDisabledSelectedIcon(null);
        ImageMenu.setFocusable(false);
        ImageMenu.setIconTextGap(0);
        ImageMenu.setOpaque(true);
        jMenuBar1.add(ImageMenu);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSeparator1)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(OutputCommandLine)
                    .addComponent(jSplitPane1))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(OutputCommandLine, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jSplitPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents
    private void CheckRequiredValues(){
        /*Check If the First TextField is empty*/
        if(P2TF1.getText().isEmpty()){
            P1Label1.setBackground(new java.awt.Color(255, 0, 0));
        }
        else{
            P1Label1.setBackground(new java.awt.Color(255, 255, 222));
        }
        
        /*Check If the Second TextField is empty*/
        if(P2CB2.getSelectedItem().toString().isEmpty()){
            P1Label2.setBackground(new java.awt.Color(255, 0, 0));
        }
        else{
            P1Label2.setBackground(new java.awt.Color(255, 255, 222));
        }
        
        /*Check If the Third TextField is a Number*/
        try{  
            double d = Double.parseDouble(P2TF3.getText().trim());
            P1Label3.setBackground(new java.awt.Color(255, 255, 222));
        }  
        
        catch(NumberFormatException nfe){  
            P1Label3.setBackground(new java.awt.Color(255, 0, 0));
        }
        
        /*Check if the Fifth TextField is a Number*/
        try{  
            double d = Double.parseDouble(P2TF5.getText().trim());
            P1Label5.setBackground(new java.awt.Color(255, 255, 222));
        }  
        
        catch(NumberFormatException nfe){  
            P1Label5.setBackground(new java.awt.Color(255, 0, 0));
        }
        
        /*Check if the Seventh TextField is a Number*/
        try{  
            double d = Double.parseDouble(P2TF7.getText().trim());
            P1Label7.setBackground(new java.awt.Color(255, 255, 222));
        }  
        
        catch(NumberFormatException nfe){  
            P1Label7.setBackground(new java.awt.Color(255, 0, 0));
        }
    }
 
    private void CheckOptionalValues(){
        /*Check if the Eighth TextField is a Number*/
        if(!P2TF8.getText().isEmpty()){
            try{  
                double d = Double.parseDouble(P2TF8.getText().trim());
                P1Label8.setBackground(new java.awt.Color(255, 255, 222));
            }  

            catch(NumberFormatException nfe){  
                P1Label8.setBackground(new java.awt.Color(255, 0, 0));
            }
        }
        
        /*Check if the Tenth TextField is a Number*/
        if(!P2TF10.getText().isEmpty()){
            try{  
                double d = Double.parseDouble(P2TF10.getText().trim());
                P1Label10.setBackground(new java.awt.Color(255, 255, 222));
            }  

            catch(NumberFormatException nfe){  
                P1Label10.setBackground(new java.awt.Color(255, 0, 0));
            }
        }
    }
    
    private void DisplayInformation(){
        String CurrentData = ""; //Store the Current Data of the commandLine
        
        /*First part of the CommandLine*/
        if(!P2CB2.getSelectedItem().toString().isEmpty()){
            CurrentData = CurrentData.concat(P2CB2.getSelectedItem().toString());
        }
        CurrentData = CurrentData.concat(" ");
        
        /*Second part of the CommandLine*/
        if(!P2TF1.getText().isEmpty()){
            CurrentData = CurrentData.concat(P2TF1.getText());
        }
        CurrentData = CurrentData.concat(" ");
        
        /*Third part of the CommandLine*/
        //Section A
        CurrentData = CurrentData.concat("T");
        //Section B
        if(!P2TF7.getText().isEmpty()){
            CurrentData = CurrentData.concat(P2TF7.getText());
        }
        //Section C
        CurrentData = CurrentData.concat("x");
        //Section D
        if(!P2TF5.getText().isEmpty()){
            CurrentData = CurrentData.concat(P2TF5.getText());
        }
        //Section E
        if(!P2TF8.getText().isEmpty()){
            CurrentData = CurrentData.concat("r"+P2TF8.getText());
        }
        //Section F
        if(P2CB13.isSelected()){
            CurrentData = CurrentData.concat("D");
        }
        //Section G
        if(!P2TF10.getText().isEmpty()){
            CurrentData = CurrentData.concat("P"+P2TF10.getText());
        }
        //Section H
        if(P2CB11.isSelected()){
            CurrentData = CurrentData.concat("M");
        }
        //Section I
        if(P2CB23.isSelected()){
            CurrentData = CurrentData.concat("d");
        }
        //Section J
        if(P2CB19.isSelected()){
            CurrentData = CurrentData.concat("f");
        }
        //Section K
        CurrentData = CurrentData.concat(" ");
        
        /*Fourth part of the CommandLine*/
        CurrentData = CurrentData.concat("TLM ");
        
        /*Fifth part of the CommandLine*/
        //Section A
        CurrentData = CurrentData.concat("s");
        //Section B
        if(!P2TF3.getText().isEmpty()){
            CurrentData = CurrentData.concat(P2TF3.getText());
        }
        //Section C
        if(P2CB14.isSelected()){
            CurrentData = CurrentData.concat("c");
        }
        //Section D
        if(P2CB15.isSelected()){
            CurrentData = CurrentData.concat("E");
        }
        //Section E
        if(P2CB16.isSelected()){
            CurrentData = CurrentData.concat("D");
        }
        //Section F
        if(P2CB6.isSelected()){
            CurrentData = CurrentData.concat("m");
        }
        //Section G
        if(P2CB17.isSelected()){
            CurrentData = CurrentData.concat("l");
        }
        //Section H
        if(P2CB22.isSelected()){
            CurrentData = CurrentData.concat("d");
        }
        OutputCommandLine.setText(CurrentData);
    }
    
    private void OpenUTLMFile(){
        try{
            File fileToOpen = new File("UTLM_SOLVER_command_line.ini");
            if(fileToOpen.exists()){
                Scanner x = new Scanner(fileToOpen);
                int numofItems = Integer.parseInt(x.nextLine());
                for(int i = 0; i < numofItems; i++){
                    P2CB2.addItem(x.nextLine());
                }
                while(x.hasNextLine()){
                    list.add(x.nextLine());
                }
                System.out.println(list); //Borrar una vez listo
                x.close();
            }
        }
        catch(Exception e){
            e.printStackTrace();
        }
    }
    
    private void SaveUTLMFile(){
        try{
            File fileToSave = new File("UTLM_SOLVER_command_line.ini");
            fileToSave.createNewFile();
            FileWriter fw = new FileWriter(fileToSave);
            /*Number of Items*/
            fw.write(Integer.toString(P2CB2.getItemCount()));
            fw.write(System.getProperty( "line.separator" ));
            for(int i =0;i < P2CB2.getItemCount();i++){
                fw.write(P2CB2.getItemAt(i));
                fw.write(System.getProperty( "line.separator" ));
            }
            for(int i = 0;i < list.size();i++){
                fw.write(list.get(i));
            }
            fw.close();
        }
        
        catch(Exception e){
            e.printStackTrace();
        }
    }
    
    private void P2TF1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_P2TF1ActionPerformed
        CheckRequiredValues();
        DisplayInformation();
    }//GEN-LAST:event_P2TF1ActionPerformed

    private void P2CB2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_P2CB2ActionPerformed
       CheckRequiredValues();
       DisplayInformation();
    }//GEN-LAST:event_P2CB2ActionPerformed

    private void P2TF3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_P2TF3ActionPerformed
        CheckRequiredValues();
        DisplayInformation();
    }//GEN-LAST:event_P2TF3ActionPerformed

    private void P2TF5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_P2TF5ActionPerformed
        CheckRequiredValues();
        DisplayInformation();
    }//GEN-LAST:event_P2TF5ActionPerformed

    private void P2CB6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_P2CB6ActionPerformed
        DisplayInformation();
    }//GEN-LAST:event_P2CB6ActionPerformed

    private void P2TF7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_P2TF7ActionPerformed
        CheckRequiredValues();
        DisplayInformation();
    }//GEN-LAST:event_P2TF7ActionPerformed

    private void P2TF8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_P2TF8ActionPerformed
        CheckOptionalValues();
        DisplayInformation();
    }//GEN-LAST:event_P2TF8ActionPerformed

    private void P2TF10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_P2TF10ActionPerformed
        CheckOptionalValues();
        DisplayInformation();
    }//GEN-LAST:event_P2TF10ActionPerformed

    private void P2CB11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_P2CB11ActionPerformed
        DisplayInformation();
    }//GEN-LAST:event_P2CB11ActionPerformed

    private void P2CB13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_P2CB13ActionPerformed
        DisplayInformation();
    }//GEN-LAST:event_P2CB13ActionPerformed

    private void P2CB14ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_P2CB14ActionPerformed
        DisplayInformation();
    }//GEN-LAST:event_P2CB14ActionPerformed

    private void P2CB15ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_P2CB15ActionPerformed
        DisplayInformation();
    }//GEN-LAST:event_P2CB15ActionPerformed

    private void P2CB16ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_P2CB16ActionPerformed
        DisplayInformation();
    }//GEN-LAST:event_P2CB16ActionPerformed

    private void P2CB17ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_P2CB17ActionPerformed
        DisplayInformation();
    }//GEN-LAST:event_P2CB17ActionPerformed

    private void P2CB19ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_P2CB19ActionPerformed
        DisplayInformation();
    }//GEN-LAST:event_P2CB19ActionPerformed

    private void P2CB20ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_P2CB20ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_P2CB20ActionPerformed

    private void P2CB21ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_P2CB21ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_P2CB21ActionPerformed

    private void P2CB22ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_P2CB22ActionPerformed
        DisplayInformation();
    }//GEN-LAST:event_P2CB22ActionPerformed

    private void P2CB23ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_P2CB23ActionPerformed
        DisplayInformation();
    }//GEN-LAST:event_P2CB23ActionPerformed

    private void OpenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OpenActionPerformed
        JFileChooser chooser = new JFileChooser();
        chooser.setDialogTitle("Open File");
        FileFilter filter = new FileNameExtensionFilter("scl Files","scl");
        chooser.setFileFilter(filter);
        int result = chooser.showOpenDialog(null);
        if(result == JFileChooser.APPROVE_OPTION){
            File fileToOpen = chooser.getSelectedFile();
            try{
                Scanner x = new Scanner(fileToOpen);
                /*Row 1 of File*/
                x.nextLine();
                /*Row 2 of File*/
                String Auxi = x.nextLine();
                /*Row 3 of File*/
                P2TF1.setText(x.nextLine());                
                /*Row 4 of File*/
                P2CB2.setSelectedItem(x.nextLine());
                OutputCommandLine.setText(Auxi);              
                /*Row 5 of File*/
                P2TF3.setText(x.nextLine());                 
                /*Row 6 of File*/
                x.nextLine();               
                /*Row 7 of File*/
                P2TF5.setText(x.nextLine());               
                /*Row 8 of File*/
                if(Double.parseDouble(x.nextLine()) == 2){
                    P2CB6.setSelected(true);
                }
                else{
                    P2CB6.setSelected(false);
                }                
                /*Row 9 of File*/
                x.nextLine();               
                 /*Row 10 of File*/
                P2TF7.setText(x.nextLine());              
                 /*Row 11 of File*/
                P2TF8.setText(x.nextLine());               
                /*Row 12 of File*/
                x.nextLine();               
                /*Row 13 of File*/
                P2TF10.setText(x.nextLine());
                /*Row 14 of File*/
                if(Double.parseDouble(x.nextLine()) == 2){
                    P2CB11.setSelected(true);
                }
                else{
                    P2CB11.setSelected(false);
                }
                /*Row 15 of File*/
                x.nextLine();               
                /*Row 16 of File*/
                x.nextLine();                
                /*Row 17 of File*/
                if(Double.parseDouble(x.nextLine()) == 2){
                    P2CB13.setSelected(true);
                }
                else{
                    P2CB13.setSelected(false);
                }                
                /*Row 18 of File*/
                x.nextLine();                
                /*Row 19 of File*/
                if(Double.parseDouble(x.nextLine()) == 2){
                    P2CB14.setSelected(true);
                }
                else{
                    P2CB14.setSelected(false);
                }               
                /*Row 20 of File*/
                x.nextLine();                
                /*Row 21 of File*/
                if(Double.parseDouble(x.nextLine()) == 2){
                    P2CB15.setSelected(true);
                }
                else{
                    P2CB15.setSelected(false);
                }               
                /*Row 22 of File*/
                x.nextLine();               
                /*Row 23 of File*/
                if(Double.parseDouble(x.nextLine()) == 2){
                    P2CB16.setSelected(true);
                }
                else{
                    P2CB16.setSelected(false);
                }                
                /*Row 24 of File*/
                x.nextLine();                
                /*Row 25 of File*/
                if(Double.parseDouble(x.nextLine()) == 2){
                    P2CB17.setSelected(true);
                }
                else{
                    P2CB17.setSelected(false);
                }               
                /*Row 26 of File*/
                x.nextLine();                
                /*Row 27 of File*/
                x.nextLine();            
                /*Row 28 of File*/
                if(Double.parseDouble(x.nextLine()) == 2){
                    P2CB19.setSelected(true);
                }
                else{
                    P2CB19.setSelected(false);
                } 
                /*Row 29 of File*/
                x.nextLine();               
                /*Row 30 of File*/
                if(Double.parseDouble(x.nextLine()) == 2){
                    P2CB20.setSelected(true);
                }
                else{
                    P2CB20.setSelected(false);
                }               
                /*Row 31 of File*/
                x.nextLine();     
                /*Row 32 of File*/
                if(Double.parseDouble(x.nextLine()) == 2){
                    P2CB21.setSelected(true);
                }
                else{
                    P2CB21.setSelected(false);
                }      
                /*Row 33 of File*/
                x.nextLine();
                /*Row 34 of File*/
                if(Double.parseDouble(x.nextLine()) == 2){
                    P2CB22.setSelected(true);
                }
                else{
                    P2CB22.setSelected(false);
                }    
                /*Row 35 of File*/
                x.nextLine();           
                /*Row 36 of File*/
                if(Double.parseDouble(x.nextLine()) == 2){
                    P2CB23.setSelected(true);
                }
                else{
                    P2CB23.setSelected(false);
                }
                x.close();
            }
            catch(Exception e){
                System.out.println("Problem Openning the File");
            }
            
        }
    }//GEN-LAST:event_OpenActionPerformed

    private void SaveAsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SaveAsActionPerformed
        JFileChooser chooser = new JFileChooser();
        chooser.setDialogTitle("Open File");
        FileFilter filter = new FileNameExtensionFilter("scl Files","scl");
        chooser.setFileFilter(filter);
        int result = chooser.showSaveDialog(null);
        if(result == JFileChooser.APPROVE_OPTION){
            File fileToSave = chooser.getSelectedFile();
            try{
                FileWriter fw = new FileWriter(fileToSave);
                /*Row 1 of File*/
                String Auxi = OutputCommandLine.getText();
                Auxi = Auxi.replaceFirst(P2CB2.getSelectedItem().toString()+" ",""); 
                fw.write(Auxi);
                fw.write(System.getProperty( "line.separator" ));
                /*Row 2 of File*/
                fw.write(OutputCommandLine.getText());
                fw.write(System.getProperty( "line.separator" ));
                /*Row 3 of File*/
                fw.write(P2TF1.getText());
                fw.write(System.getProperty( "line.separator" ));
                /*Row 4 of File*/
                fw.write(P2CB2.getSelectedItem().toString());    
                fw.write(System.getProperty( "line.separator" ));
                /*Row 5 of File*/
                fw.write(P2TF3.getText());                  
                fw.write(System.getProperty( "line.separator" ));
                /*Row 6 of File*/            
                fw.write(System.getProperty( "line.separator" ));
                /*Row 7 of File*/
                fw.write(P2TF5.getText());               
                fw.write(System.getProperty( "line.separator" ));
                /*Row 8 of File*/
                if(P2CB6.isSelected()){
                    fw.write("2");
                }
                else {
                    fw.write("0");
                } 
                fw.write(System.getProperty( "line.separator" ));
                /*Row 9 of File*/                
                fw.write(System.getProperty( "line.separator" ));
                 /*Row 10 of File*/
                fw.write(P2TF7.getText());              
                fw.write(System.getProperty( "line.separator" ));
                 /*Row 11 of File*/
                fw.write(P2TF8.getText());               
                fw.write(System.getProperty( "line.separator" ));
                /*Row 12 of File*/               
                fw.write(System.getProperty( "line.separator" ));
                /*Row 13 of File*/
                fw.write(P2TF10.getText());
                fw.write(System.getProperty( "line.separator" ));
                /*Row 14 of File*/
                if(P2CB11.isSelected()){
                    fw.write("2");
                }
                else {
                    fw.write("0");
                } 
                fw.write(System.getProperty( "line.separator" ));
                /*Row 15 of File*/                
                fw.write(System.getProperty( "line.separator" ));
                /*Row 16 of File*/              
                fw.write(System.getProperty( "line.separator" ));
                /*Row 17 of File*/
                if(P2CB13.isSelected()){
                    fw.write("2");
                }
                else {
                    fw.write("0");
                }                
                fw.write(System.getProperty( "line.separator" ));
                /*Row 18 of File*/                
                fw.write(System.getProperty( "line.separator" ));
                /*Row 19 of File*/
                if(P2CB14.isSelected()){
                    fw.write("2");
                }
                else {
                    fw.write("0");
                } 
                fw.write(System.getProperty( "line.separator" ));
                /*Row 20 of File*/              
                fw.write(System.getProperty( "line.separator" ));
                /*Row 21 of File*/
                if(P2CB15.isSelected()){
                    fw.write("2");
                }
                else {
                    fw.write("0");
                }               
                fw.write(System.getProperty( "line.separator" ));
                /*Row 22 of File*/               
                fw.write(System.getProperty( "line.separator" ));
                /*Row 23 of File*/
                if(P2CB16.isSelected()){
                    fw.write("2");
                }
                else {
                    fw.write("0");
                }                
                fw.write(System.getProperty( "line.separator" ));
                /*Row 24 of File*/                
                fw.write(System.getProperty( "line.separator" ));
                /*Row 25 of File*/
                if(P2CB17.isSelected()){
                    fw.write("2");
                }
                else {
                    fw.write("0");
                }               
                fw.write(System.getProperty( "line.separator" ));
                /*Row 26 of File*/              
                fw.write(System.getProperty( "line.separator" ));
                /*Row 27 of File*/            
                fw.write(System.getProperty( "line.separator" ));
                /*Row 28 of File*/
                if(P2CB19.isSelected()){
                    fw.write("2");
                }
                else {
                    fw.write("0");
                } 
                fw.write(System.getProperty( "line.separator" ));
                /*Row 29 of File*/                
                fw.write(System.getProperty( "line.separator" ));
                /*Row 30 of File*/
                if(P2CB20.isSelected()){
                    fw.write("2");
                }
                else {
                    fw.write("0");
                }                
                fw.write(System.getProperty( "line.separator" ));
                /*Row 31 of File*/     
                fw.write(System.getProperty( "line.separator" ));
                /*Row 32 of File*/
                if(P2CB21.isSelected()){
                    fw.write("2");
                }
                else {
                    fw.write("0");
                }      
                fw.write(System.getProperty( "line.separator" ));
                /*Row 33 of File*/ 
                fw.write(System.getProperty( "line.separator" ));
                /*Row 34 of File*/
                if(P2CB22.isSelected()){
                    fw.write("2");
                }
                else {
                    fw.write("0");
                }     
                fw.write(System.getProperty( "line.separator" ));
                /*Row 35 of File*/           
                fw.write(System.getProperty( "line.separator" ));
                /*Row 36 of File*/
                if(P2CB23.isSelected()){
                    fw.write("2");
                }
                else {
                    fw.write("0");
                }
                fw.write(System.getProperty( "line.separator" ));
                /*Row 37 of File*/
                fw.write(System.getProperty( "line.separator" ));
                /*Row 38 of File*/ 
                fw.close();
            }
            catch(IOException e){
                System.out.println("Problem to Save the file");
            }
        }
    }//GEN-LAST:event_SaveAsActionPerformed

    private void SaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SaveActionPerformed
        System.out.println(P2CB2.getItemCount());
        System.out.println(P2CB2.getItemAt(0));
        System.out.println(P2CB2.getItemAt(1));
        System.out.println(P2CB2.getItemAt(2));
        P2CB2.addItem("xd");
        System.out.println(P2CB2.getItemCount());
        System.out.println(P2CB2.getItemAt(3));
        
        list.add("xd");
        System.out.println(list.size());
        
    }//GEN-LAST:event_SaveActionPerformed

    private void ClearLaunchesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ClearLaunchesActionPerformed
        P2CB2.removeAllItems();
        
    }//GEN-LAST:event_ClearLaunchesActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        SaveUTLMFile();
    }//GEN-LAST:event_formWindowClosing

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        OpenUTLMFile();
        CheckRequiredValues();
        DisplayInformation();
    }//GEN-LAST:event_formWindowOpened

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GUI().setVisible(true);
            }
        });
    }
    // Extra Variables
    ArrayList<String> list=new ArrayList<String>();
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem ClearHistory;
    private javax.swing.JMenuItem ClearLaunches;
    private javax.swing.JMenu ClearOptions;
    private javax.swing.JMenu File;
    private javax.swing.JMenu ImageMenu;
    private javax.swing.JMenuItem Open;
    private javax.swing.JTextField OutputCommandLine;
    private javax.swing.JLabel P1Label1;
    private javax.swing.JLabel P1Label10;
    private javax.swing.JLabel P1Label11;
    private javax.swing.JLabel P1Label12;
    private javax.swing.JLabel P1Label13;
    private javax.swing.JLabel P1Label14;
    private javax.swing.JLabel P1Label15;
    private javax.swing.JLabel P1Label16;
    private javax.swing.JLabel P1Label17;
    private javax.swing.JLabel P1Label18;
    private javax.swing.JLabel P1Label19;
    private javax.swing.JLabel P1Label2;
    private javax.swing.JLabel P1Label20;
    private javax.swing.JLabel P1Label21;
    private javax.swing.JLabel P1Label22;
    private javax.swing.JLabel P1Label23;
    private javax.swing.JLabel P1Label3;
    private javax.swing.JLabel P1Label4;
    private javax.swing.JLabel P1Label5;
    private javax.swing.JLabel P1Label6;
    private javax.swing.JLabel P1Label7;
    private javax.swing.JLabel P1Label8;
    private javax.swing.JLabel P1Label9;
    private javax.swing.JLabel P1Title;
    private javax.swing.JCheckBox P2CB11;
    private javax.swing.JCheckBox P2CB13;
    private javax.swing.JCheckBox P2CB14;
    private javax.swing.JCheckBox P2CB15;
    private javax.swing.JCheckBox P2CB16;
    private javax.swing.JCheckBox P2CB17;
    private javax.swing.JCheckBox P2CB19;
    private javax.swing.JComboBox<String> P2CB2;
    private javax.swing.JCheckBox P2CB20;
    private javax.swing.JCheckBox P2CB21;
    private javax.swing.JCheckBox P2CB22;
    private javax.swing.JCheckBox P2CB23;
    private javax.swing.JCheckBox P2CB6;
    private javax.swing.JTextField P2TF1;
    private javax.swing.JTextField P2TF10;
    private javax.swing.JTextField P2TF3;
    private javax.swing.JTextField P2TF5;
    private javax.swing.JTextField P2TF7;
    private javax.swing.JTextField P2TF8;
    private javax.swing.JTextField P2TFE12;
    private javax.swing.JTextField P2TFE18;
    private javax.swing.JTextField P2TFE4;
    private javax.swing.JTextField P2TFE9;
    private javax.swing.JLabel P2Title;
    private javax.swing.JMenuItem Save;
    private javax.swing.JMenuItem SaveAs;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSplitPane jSplitPane1;
    // End of variables declaration//GEN-END:variables
}
